# This action:
# - Builds a universal pip wheel and source distribution
# - Installs and runs the unit tests on this wheel and then if successful:
# - Generates a draft release on GitHub with build files already uploaded
# - Uploads the build to test.pypi

# To finally release see publish.yml which runs when the draft release is
# published

name: Build Python Package

on:
  push:
    tags: [ 'v*.*.*' ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
      - name: Build wheel
        run: |
          python -m build
      - name: Test wheel
        # Remove local folder to ensure testing on installed package
        run: |
          rm -r dafni_cli
          pip install ./dist/dafni_cli-*.whl
          pip install freezegun
          python -m unittest discover dafni_cli.tests
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          path: ./dist/*
  draft_release:
    needs: ['build']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4.1.7
      - name: Rename extracted folder
        run: mv artifact dist
      - name: Create draft release
        env:
          GH_TOKEN: ${{ github.token }}
        run: >
          gh release create --draft --repo ${{ github.repository }}
          ${{ github.ref_name }}
          dist/*
  publish_to_test_pypi:
    # Don't really need to wait on this but it will ensure that if
    # unable to upload files from the downloaded artifact e.g. when the directory
    # structure is wrong we wont try and upload it to test.pypi at all
    needs: ['draft_release']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4.1.7
      - name: Rename extracted folder
        run: mv artifact dist
      - name: Publish to test.pypi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
      